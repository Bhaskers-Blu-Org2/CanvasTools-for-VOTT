/* CanvasTools.css */

/* RegionsManager

.regionManager
-->.regionStyle
    --> .tagsLayer
        --> .primaryTagRectStyle
            .primaryTagTextBGStyle
            .primaryTagTextStyle    
            .secondaryTagStyle
    --> .dragLayer
        --> .dragRectStyle
    --> .anchorsLayer
        --> .anchorStyle [4]
            .anchorStyle.ghost
    --> .menuLayer
        --> .menuRectStyle
*/

.regionManager {
    pointer-events: none;
}

.regionStyle {
    pointer-events: visiblePainted;
}

.dragRectStyle {
    fill: transparent; 
    stroke-width: 0;
    pointer-events: all;
    cursor: move;
}

.primaryTagRectStyle {
    fill: rgba(64, 64, 64, 0.4);
    stroke-width: 2;
    stroke:rgba(196, 196, 196, 0.6);
    stroke-dasharray: 2 6;
    stroke-linecap: round;
    filter: url(#black-glow);
}

.primaryTagTextStyle {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-size: 9pt;
    fill: #fff;
    user-select: none;
}

.primaryTagTextBGStyle {
    stroke-width: 0;
    fill: rgba(0, 0, 0, 0.5);
}

.secondaryTagStyle {
    stroke-width: 0;
    fill:#fff;
}

.regionStyle:hover .primaryTagRectStyle {
    fill: rgba(128, 128, 128, 0.4);
    stroke: rgb(255, 255, 255);
}

.regionStyle.selected .primaryTagRectStyle {
    fill: rgba(128, 128, 128, 0.4);
    stroke: rgb(255, 255, 255);
    stroke-dasharray: none;
}

.anchorStyle {
    stroke-width: 2;
    stroke: #ccc;
    fill: #333;
}

.anchorStyle.TL, .anchorStyle.BR {
    cursor: nwse-resize;
}

.anchorStyle.TR, .anchorStyle.BL {
    cursor: nesw-resize;
}

.anchorStyle.ghost, .anchorStyle.ghost:hover{
    stroke-width: 0;
    fill: rgba(255, 0, 0, 0);
}

.anchorStyle.ghost:hover {
    fill: rgba(255,255,255,0.5);
}

.anchorStyle:hover {
    stroke: rgb(25, 119, 96);
    fill:rgb(7, 189, 143);
}

.regionStyle:hover .anchorStyle {
    stroke: #fff;
}

.regionStyle.selected .anchorStyle {
    stroke: rgb(7, 189, 143);
}

svg:not(:root) .menuLayer {
    overflow: visible;
}

.menuRectStyle { 
    stroke-width:0;
    fill: rgba(64, 64, 64, 0.8);
    filter: url(#black-glow); 
}

.menuItemBack {
    stroke-width: 1.5;
    stroke: rgba(198, 198, 198, 0.2);
    fill:  rgb(32, 32, 32);
}

.menuIcon {
    font-family: 'Segoe UI Emoji', Tahoma, Geneva, Verdana, sans-serif;
    font-size: 10pt;
    fill: rgb(64, 64, 64);
}

.menuItem {
    stroke-width: 1.5;
    stroke: rgba(198, 198, 198, 0.2);
    fill:transparent;
}

.menuItem:hover {
    stroke: rgba(198, 198, 198, 0.8);
}

.regionManager.frozen .dragRectStyle, 
.regionManager.frozen .anchorStyle.TL, 
.regionManager.frozen .anchorStyle.BR, 
.regionManager.frozen .anchorStyle.TR, 
.regionManager.frozen .anchorStyle.BL {
    cursor: default; 
}

.regionManager.frozen .anchorStyle.ghost {
    display: none;
}

.regionManager.frozen .regionStyle.old, 
.regionManager.frozen .regionStyle.old:hover{
    opacity: 0.25;
}

.menuManager.frozen {
    display:none;
}


/* AreaSelector

.areaSelector
-->.RectSelector
    --> .maskStyle
        [mask]
            .maskInStyle
            .maskOutStyle
        .crossStyle
            line
            line
-->.RectCopySelector
    --> .crossStyle
            line
            line
        .copyRectStyle
*/
#selectionOverlay {
    position: relative;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

.crossStyle line {
    stroke-width:1;
    stroke-dasharray: 3 3;
    stroke: #666;
    pointer-events: none; 
}

.maskStyle {
    fill: #000;
    fill-opacity: 0.5;
    stroke-width: 0;
    pointer-events: none;
}

.maskInStyle {
    fill: #fff;
    stroke-width: 0;
    visibility: visible;
    pointer-events: none;
}

.selectionBoxStyle, .maskOutStyle {
    /* Transparent crop*/
    fill: #000;
    stroke-width: 0;
    visibility: visible;
    pointer-events: none;
}

.copyRectStyle {
    stroke-width:1;
    stroke: #666;
    fill: transparent;
    pointer-events: none; 
}

/* Toolbar 

.toolbarLayer
--> .toolbarBGStyle
--> .iconsLayerStyle
    --> .iconStyle
        --> .iconBGRectStyle
            .iconImageStyle
*/
.toolbarBGStyle {
    fill: #666;
}

.iconStyle .iconBGRectStyle{
    fill: transparent;
}

.iconStyle .iconBGRectStyle.selected {
    fill: #333;
}

.iconStyle .iconImageStyle * {
    stroke: #fff;
}